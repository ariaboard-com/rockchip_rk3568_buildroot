From 6d2151ce8be34857f3d1034884c1737390ec54b7 Mon Sep 17 00:00:00 2001
From: Jeffy Chen <jeffy.chen@rock-chips.com>
Date: Tue, 4 Aug 2020 14:30:33 +0800
Subject: [PATCH] Support setting touch calibration through environment

For example:
1/ Use weston-calibrator tool to get calibration data
[root@rk3399:/]# weston-calibrator
Final calibration values: -0.846961 0.122487 0.864176 -0.110204 -0.685913 0.958219

2/ Export calibration data through environment:
export WESTON_TOUCH_CALIBRATION="-0.846961 0.122487 0.864176 -0.110204 -0.685913 0.958219"

Signed-off-by: Jeffy Chen <jeffy.chen@rock-chips.com>
---
 clients/calibrator.c        |  9 +++++++++
 libweston/libinput-device.c | 14 ++++++++++++++
 2 files changed, 23 insertions(+)

diff --git a/clients/calibrator.c b/clients/calibrator.c
index 04c1cfc..a864bbe 100644
--- a/clients/calibrator.c
+++ b/clients/calibrator.c
@@ -103,6 +103,7 @@ finish_calibration (struct calibrator *calibrator)
 	struct weston_matrix m;
 	struct weston_matrix inverse;
 	struct weston_vector x_calib, y_calib;
+	struct rectangle allocation;
 	int i;
 
 
@@ -138,6 +139,14 @@ finish_calibration (struct calibrator *calibrator)
 		x_calib.f[0], x_calib.f[1], x_calib.f[2],
 		y_calib.f[0], y_calib.f[1], y_calib.f[2]);
 
+	widget_get_allocation(calibrator->widget, &allocation);
+	x_calib.f[2] /= allocation.width;
+	y_calib.f[2] /= allocation.height;
+
+	printf ("Final calibration values: %f %f %f %f %f %f\n",
+		x_calib.f[0], x_calib.f[1], x_calib.f[2],
+		y_calib.f[0], y_calib.f[1], y_calib.f[2]);
+
 	exit(0);
 }
 
diff --git a/libweston/libinput-device.c b/libweston/libinput-device.c
index 9c4d750..91bb565 100644
--- a/libweston/libinput-device.c
+++ b/libweston/libinput-device.c
@@ -473,6 +473,20 @@ evdev_device_set_calibration(struct evdev_device *device)
 							  calibration) != 0)
 		return;
 
+	calibration_values = getenv("WESTON_TOUCH_CALIBRATION");
+	if (calibration_values && sscanf(calibration_values,
+					 "%f %f %f %f %f %f",
+					 &calibration[0],
+					 &calibration[1],
+					 &calibration[2],
+					 &calibration[3],
+					 &calibration[4],
+					 &calibration[5]) == 6) {
+		libinput_device_config_calibration_set_matrix(device->device,
+							      calibration);
+		return;
+	}
+
 	udev = udev_new();
 	if (!udev)
 		return;
-- 
2.20.1

